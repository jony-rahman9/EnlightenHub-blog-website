-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3307
-- Generation Time: Jan 13, 2024 at 01:53 AM
-- Server version: 10.4.28-MariaDB
-- PHP Version: 8.2.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `phpcms`
--

-- --------------------------------------------------------

--
-- Table structure for table `admin_panel`
--

CREATE TABLE `admin_panel` (
  `id` int(10) NOT NULL,
  `datetime` varchar(50) NOT NULL,
  `title` varchar(200) NOT NULL,
  `category` varchar(100) NOT NULL,
  `author` varchar(100) NOT NULL,
  `image` varchar(200) NOT NULL,
  `post` varchar(10000) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `admin_panel`
--

INSERT INTO `admin_panel` (`id`, `datetime`, `title`, `category`, `author`, `image`, `post`) VALUES
(14, 'February-29-2023 00:24:33', 'post 1', 'PHP', 'j1', '', 'post 1'),
(32, 'January-13-2024 05:57:48', 'p2', 'drone', 'j1', '', 'An unmanned aerial vehicle (UAV), commonly known as a drone, is an aircraft without any human pilot, crew, or passengers on board. UAVs were originally developed through the twentieth century for military missions too \"dull, dirty or dangerous\"[1] for humans, and by the twenty-first, they had become essential assets to most militaries. '),
(33, 'January-13-2024 05:58:24', 'p3', 'drone', 'j1', '', 'Under new regulations which came into effect 1 June 2019, the term RPAS has been adopted by the Canadian Government to mean \"a set of configurable elements consisting of a remotely piloted aircraft, its control station,'),
(34, 'January-13-2024 05:59:01', 'p4', 'web', 'j1', '', 'HTML is a markup language that defines the structure of your content. HTML consists of a series of elements, which you use to enclose, or wrap, different parts of the content to make it appear a certain way, or act a certain way. The enclosing tags can make a word or image hyperlink to somewhere else, can italicize words, can make the font bigger or smaller, and so on. For example, take the following line of content:'),
(35, 'January-13-2024 06:00:02', 'p5', 'web', 'j1', '', 'The whole structure is called a ruleset. (The term ruleset is often referred to as just rule.) Note the names of the individual parts:\r\n\r\nSelector\r\nThis is the HTML element name at the start of the ruleset. It defines the element(s) to be styled (in this example, <p> elements). To style a different element, change the selector.'),
(36, 'January-13-2024 06:01:53', 'Drones technology', 'drone', 'j1', 'drone.jpg', 'Drones, also known as Unmanned Aerial Vehicles (UAVs) or Unmanned Aircraft Systems (UAS), are aircraft without a human pilot on board. They can be remotely controlled or operate autonomously using pre-programmed flight plans or dynamic automation systems. Drones come in various shapes and sizes, ranging from small consumer models to large military surveillance and attack drones.\r\n\r\nHere are some key aspects of drones:\r\n\r\n1. **Types of Drones:**\r\n   - **Consumer Drones:** These are small, affordable drones designed for recreational use, photography, and videography. They often come equipped with cameras and are popular for capturing aerial footage.\r\n   - **Commercial Drones:** Used in various industries such as agriculture, construction, and surveying, these drones have specialized sensors and tools for specific tasks, like mapping terrain or monitoring crops.\r\n   - **Military Drones:** Also known as Unmanned Combat Aerial Vehicles (UCAVs), military drones are used for reconnaissance, surveillance, and sometimes for offensive operations.\r\n\r\n2. **Components:**\r\n   - **Frame:** The physical structure of the drone, typically made of lightweight materials like carbon fiber or plastic.\r\n   - **Propellers:** Blades that generate lift and control the drone\'s movement.\r\n   - **Motors and ESCs (Electronic Speed Controllers):** Motors drive the propellers, and ESCs regulate their speed.\r\n   - **Flight Controller:** The brain of the drone, managing its stability, orientation, and navigation.\r\n   - **Battery:** Provides power for propulsion and onboard electronics.\r\n   - **Remote Control/Transmitter:** Used by the operator to control the drone manually.\r\n   - **GPS Module:** Enables autonomous flight and precise navigation.\r\n\r\n3. **Applications:**\r\n   - **Photography and Videography:** Drones equipped with cameras capture stunning aerial imagery and videos.\r\n   - **Surveying and Mapping:** Drones are used for mapping landscapes, surveying construction sites, and creating 3D models.\r\n   - **Agriculture:** Drones monitor crop health, assess field conditions, and optimize irrigation and fertilization.\r\n   - **Search and Rescue:** Drones equipped with thermal cameras assist in locating missing persons or disaster survivors.\r\n   - **Package Delivery:** Some companies are exploring the use of drones for delivering small packages to customers.\r\n\r\n4. **Challenges and Concerns:**\r\n   - **Regulation:** Many countries have regulations governing drone use to ensure safety and privacy.\r\n   - **Security:** Concerns about potential misuse of drones, such as unauthorized surveillance or weaponization.\r\n   - **Privacy:** Drones equipped with cameras raise privacy concerns, especially in residential areas.\r\n\r\nAs technology continues to advance, drones are likely to play an increasingly significant role in various fields, offering innovative solutions to a wide range of challenges.'),
(37, 'January-13-2024 06:04:16', 'CodeCraft: Unleashing Creativity in the Digital Realm - A Journey into the World of Software Engineering', 'software engineering', 'j1', 'software e.jpg', 'Software engineering is more than just writing code; it\'s a dynamic and creative process that shapes the digital landscape. In this exploration of \"CodeCraft,\" we delve into the intricate artistry behind software engineering, where creativity and logic converge to build the technological marvels that define our modern world.\r\n\r\n**The Canvas of Code:**\r\nJust as an artist begins with a blank canvas, a software engineer starts with a clean slate of code. The programming languages, frameworks, and tools at their disposal serve as the pigments, allowing them to paint intricate algorithms and functional designs. This creative process transforms abstract ideas into tangible, functional software solutions.\r\n\r\n**Architectural Symphony:**\r\nSoftware engineering resembles orchestrating a symphony, where different components harmonize to create a seamless experience. From designing scalable architectures to implementing efficient algorithms, software engineers compose intricate pieces of code that work together in perfect harmony, delivering robust and reliable applications.\r\n\r\n**Innovation as the Brushstroke:**\r\nIn the world of software engineering, innovation is the brushstroke that pushes boundaries and creates new possibilities. Creative problem-solving is at the core of the discipline, driving engineers to find unique and elegant solutions to challenges. Whether it\'s optimizing performance, enhancing user experience, or inventing groundbreaking features, software engineers continually push the boundaries of what technology can achieve.\r\n\r\n**Agile Palette:**\r\nThe Agile methodology serves as the palette, allowing software engineers to adapt their approach and respond to changing requirements. This iterative and collaborative process fosters creativity by encouraging constant communication, feedback, and evolution. The result is software that not only meets the needs of today but is also poised for the challenges of tomorrow.\r\n\r\n**Debugging: The Art of Restoration:**\r\nJust as an artist corrects imperfections in their work, software engineers engage in the art of debugging. Identifying and fixing errors is a creative process that requires a keen eye and logical thinking. Each bug squashed is a stroke of improvement, refining the software until it achieves its full potential.\r\n\r\n**Open Source Tapestry:**\r\nThe open-source community weaves a rich tapestry of collaboration and shared creativity. Software engineers contribute to and draw inspiration from a vast reservoir of freely available code, fostering an environment where knowledge flows freely, and innovations are collectively nurtured.\r\n\r\n**Conclusion: The Ongoing Masterpiece:**\r\nIn the world of software engineering, creativity is not a mere tool but the driving force behind every line of code. \"CodeCraft\" is an ongoing masterpiece, a testament to the fusion of imagination and logic that propels technology forward. As we continue this journey, we realize that software engineering is not just about building applications; it\'s about crafting a digital world that reflects the boundless ingenuity of the human mind.'),
(38, 'January-13-2024 06:05:43', 'Team work', 'teamwork', 'j1', 'team.jpg', 'Teamwork is a crucial aspect of software engineering (SE) as it involves collaborative efforts to design, develop, test, and maintain software systems. Successful software projects often require the integration of diverse skills, perspectives, and talents within a team. Here\'s a detailed exploration of teamwork in software engineering:\r\n\r\n**1. Collaboration and Communication:**\r\n   - **Multidisciplinary Teams:** Software engineering teams typically consist of individuals with diverse skills, such as programmers, designers, testers, and project managers. This diversity ensures that the team can address various aspects of the software development lifecycle.\r\n   - **Effective Communication:** Clear and open communication is vital for successful teamwork. Teams often use collaboration tools, version control systems, and project management software to streamline communication and ensure everyone is on the same page.\r\n\r\n**2. Agile Methodology:**\r\n   - **Iterative and Incremental Development:** Agile methodologies, such as Scrum or Kanban, promote teamwork by breaking down the development process into small, manageable iterations. This approach allows teams to adapt to changes quickly and deliver functional software incrementally.\r\n   - **Daily Stand-ups:** Regular stand-up meetings facilitate communication, update team members on progress, and identify any impediments. This ensures that everyone is aligned with project goals and can provide assistance when needed.\r\n\r\n**3. Division of Labor:**\r\n   - **Roles and Responsibilities:** Clearly defined roles and responsibilities help distribute tasks among team members effectively. This ensures that each team member contributes their expertise to the project, leading to a more comprehensive and well-rounded solution.\r\n\r\n**4. Code Reviews and Collaboration:**\r\n   - **Peer Review:** Code reviews involve team members scrutinizing each other\'s code to identify issues, share knowledge, and ensure adherence to coding standards. This collaborative process not only improves code quality but also helps in knowledge transfer within the team.\r\n   - **Pair Programming:** In pair programming, two developers work together at one workstation. This promotes knowledge sharing, problem-solving, and real-time collaboration, enhancing overall team productivity.\r\n\r\n**5. Continuous Integration and Deployment:**\r\n   - **Automation:** Continuous Integration (CI) and Continuous Deployment (CD) practices involve automating the process of code integration, testing, and deployment. This ensures that the team can deliver updates quickly and reliably, reducing the risk of integration issues and enhancing collaboration.\r\n\r\n**6. Conflict Resolution:**\r\n   - **Open Dialogue:** Conflicts may arise within a team due to differing opinions or approaches. Open and constructive dialogue is essential for resolving conflicts, fostering a positive team environment, and preventing misunderstandings from affecting the project.\r\n\r\n**7. Knowledge Sharing:**\r\n   - **Documentation:** Teams document their work, including code documentation, architectural decisions, and project guidelines. This documentation facilitates knowledge sharing, enabling team members to understand and contribute to different aspects of the project.\r\n\r\n**8. Team Empowerment:**\r\n   - **Empowering Team Members:** Empowering team members by giving them autonomy and recognizing their expertise fosters a sense of ownership and commitment. This approach encourages proactive problem-solving and creativity within the team.\r\n\r\nIn conclusion, teamwork is the backbone of successful software engineering projects. Effective collaboration, communication, and the application of agile methodologies contribute to the development of high-quality software solutions within a dynamic and evolving environment.'),
(39, 'January-13-2024 06:06:42', 'Web development', 'web', 'j1', 'web.jpg', 'Web development is the process of creating and maintaining websites or web applications. It encompasses a range of tasks, from designing the user interface and user experience to writing the code that makes a website or web application functional. Here is an overview of key aspects of web development:\r\n\r\n**1. Front-End Development:**\r\n   - **HTML (HyperText Markup Language):** Defines the structure and content of web pages.\r\n   - **CSS (Cascading Style Sheets):** Controls the presentation and layout of HTML elements, enhancing the visual appeal of websites.\r\n   - **JavaScript:** A scripting language that enables dynamic, interactive features on web pages. Popular front-end frameworks include React, Angular, and Vue.js.\r\n\r\n**2. Back-End Development:**\r\n   - **Server-Side Languages:** Such as PHP, Python (Django, Flask), Ruby (Ruby on Rails), Node.js, and Java (Spring). These languages handle server-side logic, database interactions, and server operations.\r\n   - **Databases:** MySQL, PostgreSQL, MongoDB, and others are used to store and retrieve data.\r\n\r\n**3. Full-Stack Development:**\r\n   - Full-stack developers work on both the front-end and back-end of a web application. They are proficient in a combination of languages, frameworks, and databases, allowing them to handle all aspects of development.\r\n\r\n**4. Web Development Frameworks:**\r\n   - **Front-End Frameworks:** Bootstrap, Foundation, and Materialize provide pre-built components and styles for faster and responsive front-end development.\r\n   - **Back-End Frameworks:** Express.js for Node.js, Django for Python, Ruby on Rails for Ruby, and Laravel for PHP are popular frameworks that streamline back-end development.\r\n\r\n**5. Responsive Web Design:**\r\n   - Ensures websites and applications adapt to different screen sizes and devices, providing a consistent user experience across desktops, tablets, and smartphones.\r\n\r\n**6. Web Development Tools:**\r\n   - **Text Editors/IDEs:** Developers use tools like Visual Studio Code, Sublime Text, or Atom for writing and editing code.\r\n   - **Version Control:** Git is widely used for tracking changes in code, collaborating with team members, and managing different versions of a project.\r\n   - **Package Managers:** npm (Node Package Manager) for Node.js and yarn for managing project dependencies.\r\n\r\n**7. Web Security:**\r\n   - Addressing security concerns is crucial. Developers must be aware of common vulnerabilities like Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF), and SQL injection.\r\n\r\n**8. Testing and Debugging:**\r\n   - **Testing Frameworks:** Tools like Jest for JavaScript and PHPUnit for PHP help developers test their code for correctness and reliability.\r\n   - **Browser Developer Tools:** Browsers provide tools for debugging and inspecting elements, helping developers identify and fix issues.\r\n\r\n**9. Deployment and Hosting:**\r\n   - Platforms like Heroku, AWS, and Azure offer hosting and deployment services. Developers must understand the deployment process and consider factors like server configuration, security, and performance optimization.\r\n\r\n**10. Continuous Learning:**\r\n   - Web development is a rapidly evolving field. Developers need to stay updated on new technologies, best practices, and industry trends to create modern and efficient web solutions.\r\n\r\nIn summary, web development is a multifaceted discipline that involves both front-end and back-end technologies, a variety of programming languages, frameworks, and tools. Successful web developers possess a combination of technical skills, creativity, and problem-solving abilities to create effective and visually appealing web applications.'),
(40, 'January-13-2024 06:08:13', 'Social media', 'web', 'j1', 'social media.jpg', 'Social media refers to online platforms and applications that facilitate the creation, sharing, and exchange of user-generated content. These platforms enable individuals, businesses, and organizations to connect, communicate, and interact with each other on a global scale. Here are some key aspects of social media:\r\n\r\n1. **Types of Social Media Platforms:**\r\n   - **Social Networking Sites:** Examples include Facebook, LinkedIn, and Twitter, where users create profiles and connect with others.\r\n   - **Media Sharing Platforms:** Instagram, Snapchat, and TikTok allow users to share photos, videos, and other media content.\r\n   - **Microblogging Platforms:** Twitter is a popular microblogging platform where users share short text updates.\r\n   - **Professional Networks:** LinkedIn is focused on professional networking and career development.\r\n   - **Discussion Forums and Communities:** Platforms like Reddit and Quora facilitate discussions on various topics.\r\n\r\n2. **Features and Functionality:**\r\n   - **Profile Creation:** Users create profiles with personal information, interests, and often a profile picture.\r\n   - **Sharing Content:** Users can post text, images, videos, and links to share with their network or the public.\r\n   - **Interactions:** Social media platforms allow users to like, comment, share, and react to content, fostering engagement.\r\n   - **Messaging:** Many platforms provide private messaging features for one-on-one or group conversations.\r\n   - **Hashtags:** Used to categorize and discover content around specific topics or themes.\r\n\r\n3. **Impact on Communication:**\r\n   - **Global Connectivity:** Social media enables communication and connections across geographical boundaries, fostering a global community.\r\n   - **Real-time Updates:** Users can share and receive real-time updates on events, news, and trends.\r\n   - **Influencer Culture:** Social media has given rise to influencers, individuals who have significant followings and influence in specific niches.\r\n\r\n4. **Business and Marketing:**\r\n   - **Brand Presence:** Businesses use social media to establish and promote their brand, products, and services.\r\n   - **Targeted Advertising:** Social media platforms offer targeted advertising options based on user demographics, interests, and behavior.\r\n   - **Customer Engagement:** Companies use social media to engage with customers, address concerns, and gather feedback.\r\n\r\n5. **Challenges and Concerns:**\r\n   - **Privacy Issues:** Concerns about the collection and use of user data by social media companies.\r\n   - **Cyberbullying:** Social media platforms can be used for harmful behaviors, including cyberbullying and harassment.\r\n   - **Spread of Misinformation:** The rapid spread of false information and fake news is a significant concern.\r\n   - **Addiction and Mental Health:** Excessive use of social media has been linked to issues such as addiction and negative impacts on mental health.\r\n\r\n6. **Evolution of Social Media:**\r\n   - **New Platforms:** Emerging platforms continually reshape the social media landscape, with newer platforms gaining popularity among specific demographics.\r\n   - **Features and Trends:** Social media platforms evolve by introducing new features, such as stories, live streaming, and augmented reality filters.\r\n\r\nIn summary, social media has become an integral part of modern communication, connecting individuals, fostering communities, and influencing various aspects of society, including business, politics, and culture. While it offers numerous benefits, it also presents challenges related to privacy, misinformation, and online behavior.'),
(41, 'January-13-2024 06:09:10', 'Evolution of printed circuit boards', 'electronics', 'j1', 'pcb board.jpg', 'The evolution of printed circuit boards (PCBs) has been a significant factor in the advancement of electronic technology. PCBs are crucial components in electronic devices, providing a platform for mounting and connecting various electronic components. Here\'s a brief overview of the evolution of PCBs:\r\n\r\n**1. Early Development (1930s-1950s):**\r\n   - **Point-to-Point Wiring:** Early electronic devices used point-to-point wiring, where components were directly connected using wires. This method was time-consuming, prone to errors, and limited the complexity of circuits.\r\n\r\n**2. Introduction of PCBs (1950s):**\r\n   - **Development of PCBs:** In the 1950s, the U.S. military began using PCBs to address the challenges of point-to-point wiring. The process involved mounting components on an insulating board and connecting them using etched metal traces.\r\n\r\n**3. Single-Layer PCBs (1950s-1960s):**\r\n   - **Early Single-Layer Designs:** Initially, PCBs were single-layered, with components mounted on one side of the board. This simplified manufacturing and assembly compared to point-to-point wiring.\r\n\r\n**4. Dual-Layer PCBs (1960s-1970s):**\r\n   - **Introduction of Dual-Layer PCBs:** As electronic devices became more complex, the need for additional wiring and connections increased. Dual-layer PCBs, with copper traces on both sides, allowed for more intricate circuit designs.\r\n\r\n**5. Multi-Layer PCBs (1970s-1980s):**\r\n   - **Rise of Multi-Layer Technology:** With the demand for smaller and more complex electronic devices, multi-layer PCBs were introduced. These boards had three or more layers, allowing for denser component placement and more complex interconnections.\r\n\r\n**6. Surface Mount Technology (SMT) (1980s-Present):**\r\n   - **Transition to SMT:** Surface Mount Technology revolutionized PCB assembly by allowing components to be mounted directly onto the surface of the board. This led to smaller, lighter, and more efficient electronic devices.\r\n\r\n**7. Miniaturization and High-Density Interconnect (HDI) (1990s-Present):**\r\n   - **HDI Technology:** High-Density Interconnect technology involves creating densely packed circuits with multiple layers, fine traces, and smaller components. This enables the production of compact, high-performance devices.\r\n\r\n**8. Flexible and Rigid-Flex PCBs (2000s-Present):**\r\n   - **Flexible PCBs:** Flexible PCBs are made of flexible materials, allowing them to bend or fold. They are used in applications where traditional rigid PCBs would be impractical.\r\n   - **Rigid-Flex PCBs:** Combining elements of both rigid and flexible PCBs, rigid-flex PCBs offer enhanced design flexibility for devices with complex form factors.\r\n\r\n**9. Integration of Advanced Materials (Present):**\r\n   - **Advanced Substrates:** The use of advanced materials, such as ceramic and composite substrates, enhances the performance of PCBs, allowing for higher frequencies, better thermal management, and improved reliability.\r\n\r\n**10. Internet of Things (IoT) and Industry 4.0 (Present-Future):**\r\n   - **Adaptation to IoT:** PCBs play a crucial role in the development of IoT devices, contributing to the connectivity and functionality of smart devices.\r\n   - **Industry 4.0 Integration:** PCBs continue to evolve to meet the demands of Industry 4.0, integrating technologies like sensors, wireless communication, and artificial intelligence.\r\n\r\nOverall, the evolution of PCBs has been driven by the need for increased functionality, miniaturization, and efficiency in electronic devices. The ongoing advancements in materials, manufacturing processes, and design techniques contribute to the continued evolution of PCB technology.'),
(42, 'January-13-2024 06:10:23', 'problem solving', 'software engineering', 'j1', 'programming.jpg', 'Problem-solving is a fundamental skill that involves the ability to analyze challenges, develop effective strategies, and implement solutions. It\'s a crucial skill in various aspects of life, including work, education, and personal development. Here\'s a general framework for effective problem-solving:\r\n\r\n**1. Define the Problem:**\r\n   - Clearly articulate the problem or challenge. Understand the scope and boundaries of the issue you\'re facing.\r\n\r\n**2. Analyze the Problem:**\r\n   - Break down the problem into smaller components. Identify the underlying causes and factors contributing to the issue.\r\n\r\n**3. Establish Goals:**\r\n   - Clearly define what you want to achieve by solving the problem. Establish specific, measurable, and achievable goals.\r\n\r\n**4. Generate Possible Solutions:**\r\n   - Brainstorm a variety of potential solutions without judging them initially. Encourage creativity and consider different perspectives.\r\n\r\n**5. Evaluate Solutions:**\r\n   - Assess the pros and cons of each potential solution. Consider feasibility, resources required, and potential outcomes.\r\n\r\n**6. Select the Best Solution:**\r\n   - Choose the solution that aligns best with your goals and has the highest likelihood of success. Prioritize solutions based on their impact and feasibility.\r\n\r\n**7. Implement the Solution:**\r\n   - Develop a plan to execute the chosen solution. Identify the steps involved, allocate resources, and establish a timeline for implementation.\r\n\r\n**8. Monitor Progress:**\r\n   - Regularly assess the progress of your solution. Make adjustments as needed, and be flexible in adapting to unforeseen challenges.\r\n\r\n**9. Reflect on the Process:**\r\n   - After implementing the solution, reflect on the entire problem-solving process. Evaluate what worked well, what could be improved, and what lessons can be applied to future problem-solving endeavors.\r\n\r\n**Tips for Effective Problem-Solving:**\r\n\r\n1. **Stay Calm:**\r\n   - Approach problems with a calm and composed mindset. Emotional reactions can hinder clear thinking.\r\n\r\n2. **Break it Down:**\r\n   - Divide complex problems into smaller, more manageable parts. This makes the analysis and solution-finding process more approachable.\r\n\r\n3. **Collaborate:**\r\n   - Seek input and perspectives from others. Collaborative problem-solving often leads to more comprehensive solutions.\r\n\r\n4. **Think Creatively:**\r\n   - Encourage creative thinking. Explore unconventional solutions and consider alternative perspectives.\r\n\r\n5. **Learn from Mistakes:**\r\n   - Treat setbacks as learning opportunities. Analyze what went wrong and use that knowledge to improve future problem-solving approaches.\r\n\r\n6. **Continuous Improvement:**\r\n   - Problem-solving is a skill that improves with practice. Continuously seek opportunities to refine your problem-solving abilities.\r\n\r\n7. **Effective Communication:**\r\n   - Clearly communicate your ideas, listen actively to others, and ensure that everyone involved in the problem-solving process understands their roles.\r\n\r\nRemember, effective problem-solving is a skill that can be developed and refined over time. Each problem presents a unique set of challenges, and adapting your approach based on the nature of the problem is key to finding successful solutions.'),
(43, 'January-13-2024 06:11:22', 'AI robots', 'robot', 'j1', 'ai robot.jpg', 'The evolution of AI robots represents a fascinating journey through the intersection of artificial intelligence and robotics. Here\'s a broad overview of the key stages in the evolution of AI robots:\r\n\r\n**1. Early Mechanical Automata (Ancient History):**\r\n   - The concept of machines with human or animal-like movements dates back to ancient civilizations. Early automata, such as mechanical birds and human-like figures, were created for entertainment.\r\n\r\n**2. Industrial Revolution and Automation (18th-19th centuries):**\r\n   - The Industrial Revolution marked the beginning of automated machinery in manufacturing. Mechanical systems were designed to perform repetitive tasks, laying the groundwork for future developments in robotics.\r\n\r\n**3. Early Robotics (20th century):**\r\n   - **Cybernetics:** The mid-20th century saw the emergence of cybernetics, a field that explored the interactions between humans and machines. Pioneers like Norbert Wiener and Alan Turing contributed foundational ideas.\r\n   - **First Robots:** The first true robots, such as the Unimate (1961), were introduced in industrial settings. These robots performed tasks like welding and lifting heavy objects.\r\n\r\n**4. AI and Robotics Convergence (Late 20th century):**\r\n   - **Integration of AI:** Advances in artificial intelligence, particularly in machine learning and expert systems, began to merge with robotics. Robots started incorporating decision-making capabilities based on data and algorithms.\r\n\r\n**5. Rise of Mobile and Service Robots (Late 20th-21st centuries):**\r\n   - **Mobile Robots:** Robots became more mobile with the development of wheeled and legged systems. Exploration robots, like NASA\'s Mars rovers, demonstrated autonomy and adaptability.\r\n   - **Service Robots:** Robots designed for service roles, such as vacuum cleaners, robotic arms in assembly lines, and medical robots, became more prevalent.\r\n\r\n**6. Humanoid Robots and Social Robots (21st century):**\r\n   - **Humanoid Robots:** Robots designed to resemble humans, like ASIMO and Atlas, were developed. These robots aimed to navigate human environments and interact more seamlessly with people.\r\n   - **Social Robots:** Emotionally intelligent robots, designed to understand and respond to human emotions, became a focus. Examples include Pepper, designed for human interaction.\r\n\r\n**7. Collaborative and Cobotic Robots (Present):**\r\n   - **Collaborative Robots (Cobots):** Robots designed to work alongside humans in shared workspaces became popular. These robots prioritize safety and collaboration, often assisting in manufacturing and logistics.\r\n   - **AI Advancements:** Deep learning and neural networks have significantly enhanced robots\' ability to recognize patterns, process natural language, and adapt to changing environments.\r\n\r\n**8. Autonomous Vehicles and Drones (Present):**\r\n   - **Autonomous Vehicles:** Self-driving cars and drones leverage AI for navigation and decision-making, showcasing the integration of robotics and AI in transportation.\r\n   - **Robotics in Healthcare:** Surgical robots and assistive devices in healthcare highlight the growing role of robotics in medical applications.\r\n\r\n**9. Future Directions (Anticipated):**\r\n   - **AI and Brain-Machine Interfaces:** Advancements in brain-machine interfaces may lead to more direct and seamless communication between humans and robots.\r\n   - **Advanced AI Capabilities:** Continued developments in AI, including natural language processing and general intelligence, may result in robots with more sophisticated cognitive abilities.\r\n\r\nThe evolution of AI robots is an ongoing process, with researchers and engineers continually pushing the boundaries of what is possible. As technology advances, we can expect even more intricate, adaptive, and intelligent robots to play essential roles in various aspects of our lives.');

-- --------------------------------------------------------

--
-- Table structure for table `category`
--

CREATE TABLE `category` (
  `id` int(10) NOT NULL,
  `datetime` varchar(50) NOT NULL,
  `name` varchar(100) NOT NULL,
  `creatorname` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `category`
--

INSERT INTO `category` (`id`, `datetime`, `name`, `creatorname`) VALUES
(2, 'February-19-2023 19:27:44', 'PHP', 'jj'),
(13, 'January-13-2024 05:54:43', 'robot', 'j1'),
(14, 'January-13-2024 05:54:46', 'web', 'j1'),
(15, 'January-13-2024 05:54:52', 'software engineering', 'j1'),
(16, 'January-13-2024 05:54:58', 'drone', 'j1'),
(17, 'January-13-2024 05:55:21', 'teamwork', 'j1'),
(18, 'January-13-2024 05:55:27', 'electronics', 'j1');

-- --------------------------------------------------------

--
-- Table structure for table `registration`
--

CREATE TABLE `registration` (
  `id` int(10) NOT NULL,
  `datetime` varchar(50) NOT NULL,
  `username` varchar(200) NOT NULL,
  `password` varchar(200) NOT NULL,
  `addedby` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `registration`
--

INSERT INTO `registration` (`id`, `datetime`, `username`, `password`, `addedby`) VALUES
(5, 'February-21-2021 17:33:07', 'j1', 'j1', 'kk'),
(6, 'January-13-2024 05:55:57', 'himel', 'himel', 'j1');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `admin_panel`
--
ALTER TABLE `admin_panel`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `category`
--
ALTER TABLE `category`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `registration`
--
ALTER TABLE `registration`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `admin_panel`
--
ALTER TABLE `admin_panel`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=44;

--
-- AUTO_INCREMENT for table `category`
--
ALTER TABLE `category`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT for table `registration`
--
ALTER TABLE `registration`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
